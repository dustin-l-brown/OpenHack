# This is SecretProviderClass example using service-principal for authentication with Key Vault
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: azure-kvname
spec:
  provider: azure
  secretObjects:
  - data:
    - key: sqldbnamekey                           # data field to populate
      objectName: sqldbname                        # name of the mounted content to sync. this could be the object name or the object alias
    secretName: sqldbnamesecret                     # name of the Kubernetes Secret object
    type: Opaque                              # type of the Kubernetes Secret object e.g. Opaque, kubernetes.io/tls
  - data:  
    - key: sqlpasswordkey                           
      objectName: sqlpassword
    secretName: sqlpasswordsecret
    type: Opaque
  - data:  
    - key: sqlserverkey                           
      objectName: sqlserver
    secretName: sqlserversecret
    type: Opaque
  - data:  
    - key: sqluserkey                           
      objectName: sqluser
    secretName: sqlusersecret
    type: Opaque
  parameters:
    usePodIdentity: "false"         # [OPTIONAL] if not provided, will default to "false"
    keyvaultName: "kvTripInsights"          # the name of the KeyVault
    cloudName: ""          # [OPTIONAL for Azure] if not provided, azure environment will default to AzurePublicCloud 
    objects:  |
      array:
        - |
          objectName: sqldbname
          objectType: secret        # object types: secret, key or cert
        - |
          objectName: sqlpassword
          objectType: secret
        - |
          objectName: sqlserver
          objectType: secret
        - |
          objectName: sqluser
          objectType: secret
    tenantId: "0b71348a-efd8-4073-b556-d028cf62bcfe"                    # the tenant ID of the KeyVault  